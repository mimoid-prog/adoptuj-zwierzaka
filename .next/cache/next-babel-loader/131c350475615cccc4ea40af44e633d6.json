{"ast":null,"code":"var _jsxFileName = \"M:\\\\ProjektyM\\\\Next\\\\AdoptujZwierzaka\\\\components\\\\Forms\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport styles from \"./form.module.css\";\nimport Link from \"next/link\";\n\nvar validate = function validate(values) {\n  var errors = {};\n  return errors;\n};\n\nvar LoginForm = function LoginForm() {\n  var _useState = useState({\n    type: \"password\",\n    text: \"Pokaż\"\n  }),\n      passwordOptions = _useState[0],\n      setPasswordOptions = _useState[1];\n\n  var handlePasswordOptionsChange = function handlePasswordOptionsChange(e) {\n    e.preventDefault();\n    if (passwordOptions.type === \"text\") setPasswordOptions({\n      type: \"password\",\n      text: \"Pokaż\"\n    });else setPasswordOptions({\n      type: \"text\",\n      text: \"Ukryj\"\n    });\n  };\n\n  var formik = useFormik({\n    initialValues: {\n      login: \"\",\n      password: \"\"\n    },\n    validate: validate,\n    onSubmit: function onSubmit(values) {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    className: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Adres e-mail\"), __jsx(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    className: styles.textInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), formik.touched.email && formik.errors.email ? __jsx(\"p\", {\n    className: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, formik.errors.email) : null, __jsx(\"label\", {\n    htmlFor: \"password\",\n    className: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Has\\u0142o\"), __jsx(\"div\", {\n    className: styles.passwordBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: passwordOptions.type,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    className: styles.textInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    className: styles.showPassword,\n    onClick: handlePasswordOptionsChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, passwordOptions.text)), formik.touched.password && formik.errors.password ? __jsx(\"p\", {\n    className: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, formik.errors.password) : null, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn main-btn \".concat(styles.submitBtn),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Zaloguj si\\u0119\"), __jsx(Link, {\n    href: \"/przypomnienie-hasla\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: styles.forgotPasswordBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Zapomnia\\u0142e\\u015B has\\u0142a?\")));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["M:/ProjektyM/Next/AdoptujZwierzaka/components/Forms/LoginForm.js"],"names":["React","useState","useFormik","styles","Link","validate","values","errors","LoginForm","type","text","passwordOptions","setPasswordOptions","handlePasswordOptionsChange","e","preventDefault","formik","initialValues","login","password","onSubmit","alert","JSON","stringify","handleSubmit","form","label","handleChange","handleBlur","email","textInput","touched","error","passwordBox","showPassword","submitBtn","forgotPasswordBtn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport styles from \"./form.module.css\";\r\nimport Link from \"next/link\";\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  return errors;\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const [passwordOptions, setPasswordOptions] = useState({\r\n    type: \"password\",\r\n    text: \"Pokaż\"\r\n  });\r\n\r\n  const handlePasswordOptionsChange = e => {\r\n    e.preventDefault();\r\n    if (passwordOptions.type === \"text\")\r\n      setPasswordOptions({\r\n        type: \"password\",\r\n        text: \"Pokaż\"\r\n      });\r\n    else\r\n      setPasswordOptions({\r\n        type: \"text\",\r\n        text: \"Ukryj\"\r\n      });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      login: \"\",\r\n      password: \"\"\r\n    },\r\n    validate,\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={styles.form}>\r\n      <label htmlFor=\"email\" className={styles.label}>\r\n        Adres e-mail\r\n      </label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n        className={styles.textInput}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <p className={styles.error}>{formik.errors.email}</p>\r\n      ) : null}\r\n\r\n      <label htmlFor=\"password\" className={styles.label}>\r\n        Hasło\r\n      </label>\r\n      <div className={styles.passwordBox}>\r\n        <input\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type={passwordOptions.type}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.password}\r\n          className={styles.textInput}\r\n        />\r\n        <button\r\n          className={styles.showPassword}\r\n          onClick={handlePasswordOptionsChange}\r\n        >\r\n          {passwordOptions.text}\r\n        </button>\r\n      </div>\r\n\r\n      {formik.touched.password && formik.errors.password ? (\r\n        <p className={styles.error}>{formik.errors.password}</p>\r\n      ) : null}\r\n\r\n      <button type=\"submit\" className={`btn main-btn ${styles.submitBtn}`}>\r\n        Zaloguj się\r\n      </button>\r\n\r\n      <Link href=\"/przypomnienie-hasla\">\r\n        <a className={styles.forgotPasswordBtn}>Zapomniałeś hasła?</a>\r\n      </Link>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}